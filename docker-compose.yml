services:
  postgres:
    image: postgres:14
    container_name: database
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    volumes:
      - eth_postgres:/var/lib/postgresql/data
    networks:
      - eth_network
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-d', $POSTGRES_DB, '-U', $POSTGRES_USER ]
      interval: 3s
      retries: 4
      timeout: 5s

  redis:
    image: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - eth_redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      retries: 4
      timeout: 5s
    networks:
      - eth_network

  application:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    networks:
      - eth_network
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: "uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
#    environment:
#      DATABASE_URL: "postgresql+asyncpg://$POSTGRES_USER:$POSTGRES_PASSWORD@postgresql:$POSTGRES_PORT/$POSTGRES_DB"
#      REDIS_URL: "redis://redis"
    networks:
      - eth_network
    depends_on:
      postgresql:
        condition: service_healthy
    command: "alembic upgrade head"

networks:
  eth_network:
    driver: bridge

volumes:
  eth_postgres:
  eth_redis_data: